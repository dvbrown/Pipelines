refGenome = "/vlsci/VR0002/shared/Reference_Files/Indexed_Ref_Genomes/TuxedoSuite_Ref_Files/Homo_sapiens/Ensembl/GRCh37/Sequence/WholeGenomeFasta/genome.fa"
refTranscriptome = "/vlsci/VR0002/shared/Reference_Files/Indexed_Ref_Genomes/TuxedoSuite_Ref_Files/Homo_sapiens/Ensembl/GRCh37/Annotation/Genes/genes.gtf"
CuffTranscriptome = "./merged.gtf"
rRNA = "./hg19_ribosome_gene_locations.list"

alignTopHat = {
  doc title: "Align using TopHat"
    desc: """Alignment is able to be split over many cores, Merri has 8 cores per node. As the library had mean size of 270bp set mate inner distance to 70.
    Use a gene model annotations -G and reuse this annotation index file by storing it in a directory."""
  exec """module load tophat/2.0.4; module load bowtie-gcc/2.0.0-b5; module load samtools-gcc/0.1.16;
  tophat -p 1 -G $CuffTranscriptome -o $input1'_out' --mate-inner-dist 70 $refGenome $input1 $input2"""
}

@Transform("bam")
mergeBam = {
  doc title: "Merge aligned bam files that are the same sample but where generated in different lanes"
    desc: "Use picard to merge by chromosomal coordinates and output as uncompressed bam"
  exec """module load java/1.6.0_25; java -Xmx2g -jar /usr/local/picard/1.69/lib/MergeSamFiles.jar
  INPUT=$input1'/accepted_hits.bam' INPUT=$input2'/accepted_hits.bam' INPUT=$input3'/accepted_hits.bam'
  INPUT=$input4'/accepted_hits.bam' INPUT=$input5'/accepted_hits.bam' INPUT=$input6'/accepted_hits.bam'
  INPUT=$input7'/accepted_hits.bam' INPUT=$input8'/accepted_hits.bam' INPUT=$input9'/accepted_hits.bam'
  OUTPUT=$output.bam"""
}

addReadGroupHeader = {
  doc title: "Any broad institute tools needs a RG group. Treat this merged bam file as a single sample"
  exec """module load java/1.6.0_25; java -Xmx2g -jar /usr/local/picard/1.69/lib/AddOrReplaceReadGroups.jar
INPUT=$input OUTPUT=$output.bam SORT_ORDER=coordinate RGID=$input'library' RGLB=RNA RGPL=illumina RGPU=FLOWCELL001 RGSM=$input"""
}

reorderSam = {
  doc title: "The picard version of sorting"
    desc: "This program updates the flag in the sam header to being sorted"
  exec """module load java/1.6.0_25; java -Xmx2g -jar /usr/local/picard/1.69/lib/ReorderSam.jar INPUT=$input OUTPUT=$output.bam
REFERENCE=$refGenome"""
}

markDuplicates = {
  doc title: "Mark PCR artifacts"
  exec """module load java/1.6.0_25; java -Xmx2g -jar /usr/local/picard/1.69/lib/MarkDuplicates.jar INPUT=$input.bam OUTPUT=$output.bam METRICS_FILE=duplicates.txt"""
}

indexSamtools = {
  doc title:"Index Bam file"
    desc: "Index the bam file"
  exec """module load samtools-gcc/0.1.18; samtools index $input"""
}

RNAseQC = {
  doc title: "Use the broad QC program"
    desc """This program requires the bam file have a read group, be coordinated sorted and PCR duplicates being marked. Needs to be indesed using samtools.
    All these procedures can be done in picard tools. Ouptputs an enormous directory with many QC files."""
  exec """module load java/1.6.0_20; module load rnaseqc/1.1.7;
  java -jar -mx1024m /vlsci/VR0002/shared/rnaseqc-1.1.7/RNA-SeQC_v1.1.7.jar -o $output -r $refGenome -rRNA $rRNA -s $input'|'$input'|Notes' -t $refTranscriptome"""
}

makeBED = {
  doc title: "COnvert to bed file to make it smaller"
  exec """module load bedtools/2.9.0; module load samtools-gcc/0.1.18;
  samtools sort -no $input.bam | bamToBed -i stdin -bedpe
"""
}

compressFile = {
  exec "tar -zcvf $ouput.tgz $inputs"
}

Bpipe.run {
  "CD133%" * [  addReadGroupHeader + reorderSam + markDuplicates +  indexSamtools +  RNAseQC ]
}